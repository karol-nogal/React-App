{"ast":null,"code":"import _defineProperty from \"/home/karol/Desktop/RepozytoriaNaProfil/React App/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/karol/Desktop/RepozytoriaNaProfil/React App/src/menu/home/UsersChart.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { PureComponent } from 'react';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { DATABASE_URL } from '../home/Home';\n\nconst CustomTooltip = ({\n  active,\n  payload,\n  label\n}) => {\n  if (active) {\n    return React.createElement(\"div\", {\n      className: \"Home__Charts--UsersChart--tooltip--container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"\".concat(label)), React.createElement(\"p\", {\n      className: \"Home__Charts--UsersChart--tooltip--intro1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"New Users : \".concat(payload[0].value)), React.createElement(\"p\", {\n      className: \"Home__Charts--UsersChart--tooltip--intro2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Total Users : \".concat(payload[1].value)));\n  }\n\n  ;\n  return null;\n};\n\nexport default class UsersChart extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      registeredUsers: [],\n      isLoading: true,\n      hasError: false,\n      error: ''\n    };\n  }\n\n  fetchRegisteredUsersData() {\n    fetch(\"\".concat(DATABASE_URL, \"/data/registered-users.json\")).then(response => response.json()).then(fetchedData => {\n      const keys = Object.keys(fetchedData);\n      const formattedData = keys.map(key => {\n        return _objectSpread({\n          id: key\n        }, fetchedData[key]);\n      });\n      this.setState({\n        registeredUsers: formattedData,\n        isLoading: false,\n        hasError: false,\n        error: ''\n      });\n    }).catch(error => {\n      this.setState({\n        hasError: true,\n        error: error\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.fetchRegisteredUsersData();\n  }\n\n  renderColorfulLegendText(value, entry) {\n    const color = entry.color;\n    const dataLabel = value;\n    const dataLabelTransformed = dataLabel.charAt(0).toUpperCase() + dataLabel.slice(1, dataLabel.length - 5) + ' ' + dataLabel.slice(dataLabel.length - 5);\n    return React.createElement(\"span\", {\n      style: {\n        color,\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, dataLabelTransformed);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Error! \");\n    }\n\n    ;\n\n    if (this.state.isLoading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Please wait, loading registered players data...\");\n    }\n\n    ;\n    return React.createElement(\"div\", {\n      className: \"Home__Charts--items--Users\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"Home__Charts--title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Did you know: How many users we have?\"), React.createElement(ResponsiveContainer, {\n      width: '100%',\n      height: 450,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(AreaChart, {\n      data: this.state.registeredUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Legend, {\n      verticalAlign: \"top\",\n      width: \"100%\",\n      height: 30,\n      formatter: this.renderColorfulLegendText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      dataKey: \"monthName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      content: React.createElement(CustomTooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Area, {\n      type: \"monotone\",\n      dataKey: \"newUsers\",\n      stackId: \"1\",\n      stroke: \"#00E49F\",\n      fill: \"#00E49F\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(Area, {\n      type: \"monotone\",\n      dataKey: \"totalUsers\",\n      stackId: \"1\",\n      stroke: \"#f2d43f\",\n      fill: \"#f2d43f\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }))));\n  }\n\n}\nUsersChart.jsfiddleUrl = 'https://jsfiddle.net/alidingling/c1rLyqj1/';\n;","map":{"version":3,"sources":["/home/karol/Desktop/RepozytoriaNaProfil/React App/src/menu/home/UsersChart.js"],"names":["React","PureComponent","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","DATABASE_URL","CustomTooltip","active","payload","label","value","UsersChart","constructor","props","state","registeredUsers","isLoading","hasError","error","fetchRegisteredUsersData","fetch","then","response","json","fetchedData","keys","Object","formattedData","map","key","id","setState","catch","componentDidMount","renderColorfulLegendText","entry","color","dataLabel","dataLabelTransformed","charAt","toUpperCase","slice","length","fontWeight","render","jsfiddleUrl"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n  AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\n} from 'recharts';\n\nimport { DATABASE_URL } from '../home/Home';\n\nconst CustomTooltip = ({ active, payload, label }) => {\n  if (active) {\n    return (\n      <div className=\"Home__Charts--UsersChart--tooltip--container\">\n        <p>{`${label}`}</p>\n        <p className=\"Home__Charts--UsersChart--tooltip--intro1\">{`New Users : ${payload[0].value}`}</p>\n        <p className=\"Home__Charts--UsersChart--tooltip--intro2\">{`Total Users : ${payload[1].value}`}</p>\n      </div>\n    );\n  };\n\n  return null;\n};\n\nexport default class UsersChart extends PureComponent {\n  constructor (props) {\n    super (props);\n    this.state = {\n      registeredUsers:[],\n      isLoading: true,\n      hasError: false,\n      error: '',\n    };\n  };\n\n  fetchRegisteredUsersData() {\n    fetch(`${DATABASE_URL}/data/registered-users.json`)\n      .then( response => response.json())\n      .then( fetchedData => {\n        const keys = Object.keys(fetchedData);\n        const formattedData = keys.map( key => {\n          return {\n            id: key,\n            ...fetchedData[key],\n          };\n        });\n\n        this.setState({\n          registeredUsers: formattedData,\n          isLoading: false,\n          hasError: false,\n          error: '',\n        });\n      })\n      .catch( error => {\n        this.setState({\n          hasError: true,\n          error: error,\n        });\n      });\n  };\n\n  componentDidMount() {\n      this.fetchRegisteredUsersData();\n  };\n\n  renderColorfulLegendText (value, entry) {\n    const { color } = entry;\n    const dataLabel = value;\n    const dataLabelTransformed = dataLabel.charAt(0).toUpperCase() + dataLabel.slice(1, dataLabel.length-5) + ' ' + dataLabel.slice(dataLabel.length-5);\n    return <span style={{ color, fontWeight: \"bold\" }}>{dataLabelTransformed}</span>;\n  };\n\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/c1rLyqj1/';\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          Error! {/*this.state.error*/}\n        </div>\n      );\n    };\n    \n    if (this.state.isLoading) {\n      return (\n        <div>\n          Please wait, loading registered players data...\n        </div>\n      );\n    };\n\n    return (\n      <div className=\"Home__Charts--items--Users\">\n        <h3 className=\"Home__Charts--title\">Did you know: How many users we have?</h3>\n        <ResponsiveContainer width={'100%'} height={450}>\n          <AreaChart data={this.state.registeredUsers} >\n            <Legend verticalAlign=\"top\" width='100%' height={30} formatter={this.renderColorfulLegendText} />\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"monthName\" />\n            <YAxis />\n            <Tooltip content={<CustomTooltip />} />\n            <Area type=\"monotone\" dataKey=\"newUsers\" stackId=\"1\" stroke=\"#00E49F\" fill=\"#00E49F\" />\n            <Area type=\"monotone\" dataKey=\"totalUsers\" stackId=\"1\" stroke=\"#f2d43f\" fill=\"#f2d43f\" />\n          </AreaChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  };\n};\n"]},"metadata":{},"sourceType":"module"}