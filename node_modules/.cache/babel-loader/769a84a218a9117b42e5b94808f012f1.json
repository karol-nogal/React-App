{"ast":null,"code":"import _defineProperty from \"/home/karol/Desktop/Projekt/app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/karol/Desktop/Projekt/app/src/menu/games/newGameForm/GameForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { Form } from 'semantic-ui-react';\nconst options = [{\n  key: '1',\n  text: '1',\n  value: 1\n}, {\n  key: '2',\n  text: '2',\n  value: 2\n}, {\n  key: '3',\n  text: '3',\n  value: 2\n}, {\n  key: '4',\n  text: '4',\n  value: 3\n}, {\n  key: '5',\n  text: '5',\n  value: 4\n}, {\n  key: '6',\n  text: '6',\n  value: 5\n}, {\n  key: '7',\n  text: '7',\n  value: 6\n}, {\n  key: '8',\n  text: '8',\n  value: 7\n}, {\n  key: '9',\n  text: '9',\n  value: 8\n}];\nconst initialState = {\n  title: \"\",\n  localization: {\n    city: \"\",\n    place: \"\"\n  },\n  date: \"\",\n  palyer: {\n    max: 0,\n    current: 0\n  },\n  ReqLevelID: 0,\n  description: \"\"\n};\nexport default class GameForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = _objectSpread({}, initialState);\n\n    this.handleOnChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleLocalizationOnChange = event => {\n      this.setState({\n        localization: _objectSpread({}, this.state.localization, {\n          [event.target.name]: event.target.value\n        })\n      });\n    };\n\n    this.handlePlayerOnChange = (_, event) => {\n      console.log(event.value);\n      this.setState({\n        player: _objectSpread({}, this.state.player, {\n          [event.name]: event.value\n        })\n      });\n      console.log(this.state.palyer);\n    };\n\n    this.handleonClick = event => {\n      event.preventDefault();\n\n      const formattedFormData = _objectSpread({}, this.state, {\n        player: {\n          max: parseInt(this.state.player.max),\n          current: parseInt(this.state.player.current)\n        }\n      });\n\n      fetch(\"https://fantasyapp-9473b.firebaseio.com/plays.json\", {\n        method: \"POST\",\n        body: JSON.stringify(formattedFormData)\n      }).then(() => {\n        this.setState(initialState);\n      }).catch(err => err.message);\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          title = _this$state.title,\n          localization = _this$state.localization,\n          date = _this$state.date,\n          palyer = _this$state.palyer,\n          ReqLevelID = _this$state.ReqLevelID,\n          description = _this$state.description;\n    return React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      fluid: true,\n      label: \"Game\",\n      placeholder: \"Game name\",\n      name: \"title\",\n      value: title,\n      onChange: this.handleOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      label: \"City\",\n      placeholder: \"City\",\n      name: \"city\",\n      value: localization.city,\n      onChange: this.handleLocalizationOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      label: \"Localization\",\n      name: \"place\",\n      placeholder: \"Pub, Bar , House\",\n      value: localization.place,\n      onChange: this.handleLocalizationOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      label: \"Date\",\n      name: \"date\",\n      placeholder: \"YYYY-MM-DD\",\n      value: date,\n      onChange: this.handleOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Form.Select, {\n      fluid: true,\n      name: \"max\",\n      label: \"Max players\",\n      options: options,\n      placeholder: \"Players\",\n      value: palyer.max,\n      onChange: this.handlePlayerOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(Form.TextArea, {\n      name: \"description\",\n      label: \"Descripton\",\n      placeholder: \"Game Description\",\n      value: description,\n      onChange: this.handleOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Form.Button, {\n      onClick: this.handleonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Create new Game\"));\n  }\n\n}","map":{"version":3,"sources":["/home/karol/Desktop/Projekt/app/src/menu/games/newGameForm/GameForm.js"],"names":["React","Form","options","key","text","value","initialState","title","localization","city","place","date","palyer","max","current","ReqLevelID","description","GameForm","Component","state","handleOnChange","event","setState","target","name","handleLocalizationOnChange","handlePlayerOnChange","_","console","log","player","handleonClick","preventDefault","formattedFormData","parseInt","fetch","method","body","JSON","stringify","then","catch","err","message","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form } from 'semantic-ui-react'\n\nconst options = [\n    { key: '1', text: '1', value: 1 },\n    { key: '2', text: '2', value: 2 },\n    { key: '3', text: '3', value: 2 },\n    { key: '4', text: '4', value: 3 },\n    { key: '5', text: '5', value: 4 },\n    { key: '6', text: '6', value: 5 },\n    { key: '7', text: '7', value: 6 },\n    { key: '8', text: '8', value: 7 },\n    { key: '9', text: '9', value: 8 },\n  ]\n\n\n  const initialState = {\n    title:\"\",\n    localization: {city:\"\",place:\"\"},\n    date:\"\",\n    palyer:{max:0,current:0},\n    ReqLevelID: 0,\n    description:\"\"\n  }\n\nexport default class GameForm extends React.Component {\n  state = {\n      ...initialState\n};\n\nhandleOnChange = (event) => {\n    this.setState({\n        [event.target.name]: event.target.value\n    })\n};\n\nhandleLocalizationOnChange = (event) => {\n    this.setState({\n        localization: {...this.state.localization, [event.target.name]: event.target.value}\n    })\n};\n\nhandlePlayerOnChange = (_, event) => {\n    console.log(event.value)\n    this.setState({\n        player: {...this.state.player, [event.name]: event.value}\n    })\n    console.log(this.state.palyer)\n};\n\nhandleonClick=(event)=>{\n    event.preventDefault();\n    const formattedFormData = {\n        ...this.state,\n        player: {max: parseInt(this.state.player.max), current: parseInt(this.state.player.current)}\n    };\n    fetch(\"https://fantasyapp-9473b.firebaseio.com/plays.json\",{\n        method: \"POST\",\n        body: JSON.stringify(formattedFormData)\n    })\n    .then(()=>{\n        this.setState(initialState)\n    })\n    .catch(err=>err.message)\n}\n\n  render() {\n    const { title, localization, date, palyer, ReqLevelID, description } = this.state;\n    return (\n      <Form>\n        <Form.Group widths=\"equal\">\n          <Form.Input fluid label=\"Game\" placeholder=\"Game name\" name={\"title\"} value={title} onChange={this.handleOnChange}/>\n          <Form.Input fluid label=\"City\" placeholder=\"City\" name={\"city\"} value={localization.city} onChange={this.handleLocalizationOnChange}/>\n          <Form.Input fluid label=\"Localization\" name={\"place\"} placeholder=\"Pub, Bar , House\" value={localization.place} onChange={this.handleLocalizationOnChange}/>\n          <Form.Input fluid label=\"Date\" name={\"date\"} placeholder=\"YYYY-MM-DD\" value={date} onChange={this.handleOnChange}/>\n          <Form.Select\n            fluid\n            name={\"max\"}\n            label='Max players'\n            options={options}\n            placeholder='Players'\n            value={palyer.max}\n            onChange={this.handlePlayerOnChange}\n          />\n        </Form.Group>\n        <Form.TextArea name={\"description\"}  label=\"Descripton\" placeholder=\"Game Description\" value={description} onChange={this.handleOnChange}/>\n        <Form.Button onClick={this.handleonClick}>Create new Game</Form.Button>\n      </Form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}