{"ast":null,"code":"import _defineProperty from \"/home/karol/Desktop/Projekt/app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/karol/Desktop/Projekt/app/src/menu/home/GamesChart.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { PureComponent } from 'react';\nimport { PieChart, Pie, Cell, Legend, Sector, ResponsiveContainer } from 'recharts';\nconst COLORS = ['#eddaa6', '#00E49F', '#f2d43f', '#82ca9d'];\nconst RADIAN = Math.PI / 180;\nexport default class GamesChart extends PureComponent {\n  constructor(_props) {\n    super(_props);\n\n    this.renderCustomizedLabel = ({\n      cx,\n      cy,\n      midAngle,\n      innerRadius,\n      outerRadius,\n      percent\n    }) => {\n      const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n      const x = cx + radius * Math.cos(-midAngle * RADIAN);\n      const y = cy + radius * Math.sin(-midAngle * RADIAN);\n      return React.createElement(\"text\", {\n        x: x,\n        y: y,\n        fill: \"black\",\n        textAnchor: x > cx ? 'start' : 'end',\n        dominantBaseline: \"central\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"\".concat((percent * 100).toFixed(0), \"%\"));\n    };\n\n    this.renderActiveShape = props => {\n      const cx = props.cx,\n            cy = props.cy,\n            midAngle = props.midAngle,\n            innerRadius = props.innerRadius,\n            outerRadius = props.outerRadius,\n            startAngle = props.startAngle,\n            endAngle = props.endAngle,\n            fill = props.fill,\n            payload = props.payload,\n            value = props.value;\n      const sin = Math.sin(-RADIAN * midAngle);\n      const cos = Math.cos(-RADIAN * midAngle);\n      const sx = cx + (outerRadius + 5) * cos;\n      const sy = cy + (outerRadius + 5) * sin;\n      const mx = cx + (outerRadius + 30) * cos;\n      const my = cy + (outerRadius + 30) * sin;\n      const ex = mx + (cos >= 0 ? 1 : -1) * 11;\n      const ey = my;\n      const textAnchor = cos >= 0 ? 'start' : 'end';\n      return React.createElement(\"g\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Sector, {\n        cx: cx,\n        cy: cy,\n        innerRadius: innerRadius,\n        outerRadius: outerRadius,\n        startAngle: startAngle,\n        endAngle: endAngle,\n        fill: fill,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(Sector, {\n        cx: cx,\n        cy: cy,\n        startAngle: startAngle,\n        endAngle: endAngle,\n        innerRadius: outerRadius + 6,\n        outerRadius: outerRadius + 10,\n        fill: fill,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(\"path\", {\n        d: \"M\".concat(sx, \",\").concat(sy, \"L\").concat(mx, \",\").concat(my, \"L\").concat(ex, \",\").concat(ey),\n        stroke: fill,\n        fill: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(\"circle\", {\n        cx: ex,\n        cy: ey,\n        r: 2,\n        fill: fill,\n        stroke: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(\"text\", {\n        x: ex + (cos >= 0 ? 1 : -1) * 12,\n        y: ey,\n        dy: -8,\n        dominantBaseline: \"central\",\n        textAnchor: textAnchor,\n        fill: \"#333\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, payload.name), React.createElement(\"text\", {\n        x: ex + (cos >= 0 ? 1 : -1) * 12,\n        y: ey,\n        dy: 10,\n        dominantBaseline: \"central\",\n        textAnchor: textAnchor,\n        fill: \"#333\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"\".concat(value, \" games\")));\n    };\n\n    this.onPieEnter = (data, index) => {\n      this.setState({\n        activeIndex: index\n      });\n    };\n\n    this.state = {\n      playedGames: [],\n      kindsOfGames: [],\n      playedGamesByKind: [],\n      isLoading: true,\n      hasError: false,\n      error: '',\n      activeIndex: 0\n    };\n  }\n\n  fetchPlayedGamesData() {\n    return fetch(\"/data/played-games.json\").then(response => response.json()).then(fetchedData => {\n      this.setState({\n        playedGames: fetchedData,\n        isLoading: false,\n        hasError: false,\n        error: ''\n      });\n    }).catch(error => {\n      this.setState({\n        hasError: true,\n        error: error\n      });\n    });\n  }\n\n  fetchKindsOfGamesData() {\n    return fetch(\"/data/kinds-of-games.json\").then(response => response.json()).then(fetchedData => {\n      const kindsOfGamesWithCapitalizedFirstLetter = fetchedData.map(kind => {\n        const kindName = kind.kindName;\n        const kindNameCapitalized = kindName.charAt(0).toUpperCase() + kindName.slice(1);\n        return {\n          kindID: kind.kindID,\n          kindName: kindNameCapitalized\n        };\n      });\n      this.setState({\n        kindsOfGames: kindsOfGamesWithCapitalizedFirstLetter,\n        isLoading: false,\n        hasError: false,\n        error: ''\n      });\n    }).catch(error => {\n      this.setState({\n        hasError: true,\n        error: error\n      });\n    });\n  }\n\n  renderPlayedGamesByKindArr() {\n    const data = this.state.playedGames.map(game => {\n      return _objectSpread({}, game, {\n        name: this.state.kindsOfGames.find(kind => {\n          return kind.kindID === game.kindID;\n        }).kindName\n      });\n    });\n    this.setState({\n      playedGamesByKind: data\n    });\n  }\n\n  componentDidMount() {\n    Promise.all([this.fetchKindsOfGamesData(), this.fetchPlayedGamesData()]).then(() => {\n      this.renderPlayedGamesByKindArr();\n    });\n  }\n\n  renderColorfulLegendText(value, entry) {\n    const color = entry.color;\n    return React.createElement(\"span\", {\n      style: {\n        color,\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, value);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Error! \", this.state.error);\n    }\n\n    ;\n\n    if (this.state.isLoading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Please wait, loading recently played games data...\");\n    }\n\n    ;\n    return React.createElement(\"div\", {\n      className: \"Home__Charts--items--Games\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"Home__Charts--title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Did you know: how many board games have been played this month?\"), React.createElement(ResponsiveContainer, {\n      width: '100%',\n      height: 450,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(PieChart, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Legend, {\n      verticalAlign: \"top\",\n      width: \"100%\",\n      height: 30,\n      formatter: this.renderColorfulLegendText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(Pie, {\n      activeIndex: this.state.activeIndex,\n      activeShape: this.renderActiveShape,\n      onMouseEnter: this.onPieEnter,\n      data: this.state.playedGamesByKind,\n      cx: '45%',\n      cy: '50%',\n      labelLine: false,\n      label: this.renderCustomizedLabel,\n      outerRadius: 150,\n      fill: \"#8884d8\",\n      dataKey: \"playedGames\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, this.state.playedGamesByKind.map((entry, index) => React.createElement(Cell, {\n      key: \"cell-\".concat(index),\n      fill: COLORS[index % COLORS.length],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }))))));\n  }\n\n}\nGamesChart.jsfiddleUrl = 'https://jsfiddle.net/alidingling/c9pL8k61/';\n;","map":{"version":3,"sources":["/home/karol/Desktop/Projekt/app/src/menu/home/GamesChart.js"],"names":["React","PureComponent","PieChart","Pie","Cell","Legend","Sector","ResponsiveContainer","COLORS","RADIAN","Math","PI","GamesChart","constructor","props","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","x","cos","y","sin","toFixed","renderActiveShape","startAngle","endAngle","fill","payload","value","sx","sy","mx","my","ex","ey","textAnchor","name","onPieEnter","data","index","setState","activeIndex","state","playedGames","kindsOfGames","playedGamesByKind","isLoading","hasError","error","fetchPlayedGamesData","fetch","then","response","json","fetchedData","catch","fetchKindsOfGamesData","kindsOfGamesWithCapitalizedFirstLetter","map","kind","kindName","kindNameCapitalized","charAt","toUpperCase","slice","kindID","renderPlayedGamesByKindArr","game","find","componentDidMount","Promise","all","renderColorfulLegendText","entry","color","fontWeight","render","length","jsfiddleUrl"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { PieChart, Pie, Cell, Legend, Sector, ResponsiveContainer } from 'recharts';\n\nconst COLORS = ['#eddaa6', '#00E49F', '#f2d43f', '#82ca9d'];\nconst RADIAN = Math.PI / 180;\n\nexport default class GamesChart extends PureComponent {\n  constructor (props) {\n    super (props);\n    this.state = {\n      playedGames:[],\n      kindsOfGames: [],\n      playedGamesByKind: [],\n      isLoading: true,\n      hasError: false,\n      error: '',\n      activeIndex: 0,\n    };\n  };\n\n  fetchPlayedGamesData() {\n    return fetch(\"/data/played-games.json\")\n      .then( response => response.json())\n      .then( fetchedData => {\n        this.setState({\n          playedGames: fetchedData,\n          isLoading: false,\n          hasError: false,\n          error: '',\n        });\n      })\n      .catch( error => {\n        this.setState({\n          hasError: true,\n          error: error,\n        });\n      });\n  };\n\n  fetchKindsOfGamesData() {\n    return fetch(\"/data/kinds-of-games.json\")\n      .then( response => response.json())\n      .then( fetchedData => {\n        const kindsOfGamesWithCapitalizedFirstLetter = fetchedData.map( kind => {\n            const kindName = kind.kindName;\n            const kindNameCapitalized = kindName.charAt(0).toUpperCase() + kindName.slice(1);\n            return {\n              kindID: kind.kindID,\n              kindName: kindNameCapitalized,\n            };\n          }\n        );\n\n        this.setState({\n          kindsOfGames: kindsOfGamesWithCapitalizedFirstLetter,\n          isLoading: false,\n          hasError: false,\n          error: '',\n        });\n      })\n      .catch( error => {\n        this.setState({\n          hasError: true,\n          error: error,\n        });\n      });\n  };\n\n  renderPlayedGamesByKindArr() {\n    const data = this.state.playedGames.map( game => {\n      return {\n        ...game,\n        name: this.state.kindsOfGames.find( kind => {\n          return kind.kindID === game.kindID}).kindName,\n        }\n    });\n\n    this.setState({\n      playedGamesByKind: data,\n    });\n  };\n\n  componentDidMount() {\n      Promise.all([\n        this.fetchKindsOfGamesData(),\n        this.fetchPlayedGamesData(),\n        ])\n        .then(() => {this.renderPlayedGamesByKindArr();\n      });\n  };\n\n  renderColorfulLegendText (value, entry) {\n    const { color } = entry;\n    return <span style={{ color, fontWeight: \"bold\" }}>{value}</span>;\n  };\n\n  renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent }) => {\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n  \n    return (\n      <text x={x} y={y} fill=\"black\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n        {`${(percent * 100).toFixed(0)}%`}\n      </text>\n    );\n  };\n\n  renderActiveShape = (props) => {\n    const {\n      cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\n      fill, payload, value\n    } = props;\n    const sin = Math.sin(-RADIAN * midAngle);\n    const cos = Math.cos(-RADIAN * midAngle);\n    const sx = cx + (outerRadius + 5) * cos;\n    const sy = cy + (outerRadius + 5) * sin;\n    const mx = cx + (outerRadius + 30) * cos;\n    const my = cy + (outerRadius + 30) * sin;\n    const ex = mx + (cos >= 0 ? 1 : -1) * 11;\n    const ey = my;\n    const textAnchor = cos >= 0 ? 'start' : 'end';\n  \n    return (\n      <g>\n        <Sector\n          cx={cx}\n          cy={cy}\n          innerRadius={innerRadius}\n          outerRadius={outerRadius}\n          startAngle={startAngle}\n          endAngle={endAngle}\n          fill={fill}\n        />\n        <Sector\n          cx={cx}\n          cy={cy}\n          startAngle={startAngle}\n          endAngle={endAngle}\n          innerRadius={outerRadius + 6}\n          outerRadius={outerRadius + 10}\n          fill={fill}\n        />\n        <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\n        <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n        <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={-8} dominantBaseline=\"central\" textAnchor={textAnchor} fill=\"#333\">{payload.name}</text>\n        <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={10} dominantBaseline=\"central\" textAnchor={textAnchor} fill=\"#333\">{`${value} games`}</text>\n      </g>\n    );\n  };\n\n  onPieEnter = (data, index) => {\n    this.setState({\n      activeIndex: index,\n    });\n  };\n\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/c9pL8k61/';\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          Error! {this.state.error}\n        </div>\n      );\n    };\n    \n    if (this.state.isLoading) {\n      return (\n        <div>\n          Please wait, loading recently played games data...\n        </div>\n      );\n    };\n\n    return (\n      <div className=\"Home__Charts--items--Games\">\n        <h3 className=\"Home__Charts--title\">Did you know: how many board games have been played this month?</h3>\n        <ResponsiveContainer width={'100%'} height={450}>\n          <PieChart >\n            <Legend verticalAlign=\"top\" width='100%' height={30} formatter={this.renderColorfulLegendText} />\n            <Pie\n              activeIndex={this.state.activeIndex}\n              activeShape={this.renderActiveShape}\n              onMouseEnter={this.onPieEnter}\n              data={this.state.playedGamesByKind}\n              cx={'45%'}\n              cy={'50%'}\n              labelLine={false}\n              label={this.renderCustomizedLabel}\n              outerRadius={150}\n              fill=\"#8884d8\"\n              dataKey=\"playedGames\"\n            >\n              {\n                this.state.playedGamesByKind.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n              }\n            </Pie>\n          </PieChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  };\n};"]},"metadata":{},"sourceType":"module"}