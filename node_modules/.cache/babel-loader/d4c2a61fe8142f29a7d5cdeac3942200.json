{"ast":null,"code":"var _jsxFileName = \"/home/karol/Desktop/Projekt/app/src/menu/home/UsersChart.js\";\nimport React, { PureComponent } from 'react';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nexport default class UsersChart extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      registeredUsers: [],\n      isLoading: true,\n      hasError: false,\n      error: ''\n    };\n  }\n\n  fetchRegisteredUsersData() {\n    fetch(\"/data/registered-users.json\").then(response => response.json()).then(fetchedData => {\n      this.setState({\n        registeredUsers: fetchedData,\n        isLoading: false,\n        hasError: false,\n        error: ''\n      });\n    }).catch(error => {\n      this.setState({\n        hasError: true,\n        error: error\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.fetchRegisteredUsersData();\n  }\n\n  renderColorfulLegendText(value, entry) {\n    const color = entry.color; //IDEA Change newUsers to New users here\n\n    return React.createElement(\"span\", {\n      style: {\n        color\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, value);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Error! \", this.state.error);\n    }\n\n    ;\n\n    if (this.state.isLoading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Please wait, loading registered players data...\");\n    }\n\n    ;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Current number of users\"), React.createElement(AreaChart, {\n      width: 500,\n      height: 450,\n      data: this.state.registeredUsers,\n      margin: {\n        top: 10,\n        right: 30,\n        left: 0,\n        bottom: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Legend, {\n      verticalAlign: \"top\",\n      height: 30,\n      formatter: this.renderColorfulLegendText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      dataKey: \"month\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Area, {\n      type: \"monotone\",\n      dataKey: \"newUsers\",\n      stackId: \"1\",\n      stroke: \"#8884d8\",\n      fill: \"#8884d8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Area, {\n      type: \"monotone\",\n      dataKey: \"totalUsers\",\n      stackId: \"1\",\n      stroke: \"#82ca9d\",\n      fill: \"#82ca9d\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })));\n  }\n\n}\nUsersChart.jsfiddleUrl = 'https://jsfiddle.net/alidingling/c1rLyqj1/';\n;","map":{"version":3,"sources":["/home/karol/Desktop/Projekt/app/src/menu/home/UsersChart.js"],"names":["React","PureComponent","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","Legend","UsersChart","constructor","props","state","registeredUsers","isLoading","hasError","error","fetchRegisteredUsersData","fetch","then","response","json","fetchedData","setState","catch","componentDidMount","renderColorfulLegendText","value","entry","color","render","top","right","left","bottom","jsfiddleUrl"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n  AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend\n} from 'recharts';\n\nexport default class UsersChart extends PureComponent {\n  constructor (props) {\n    super (props);\n    this.state = {\n      registeredUsers:[],\n      isLoading: true,\n      hasError: false,\n      error: '',\n    };\n  };\n\n  fetchRegisteredUsersData() {\n    fetch(\"/data/registered-users.json\")\n      .then( response => response.json())\n      .then( fetchedData => {\n        this.setState({\n          registeredUsers: fetchedData,\n          isLoading: false,\n          hasError: false,\n          error: '',\n        });\n      })\n      .catch( error => {\n        this.setState({\n          hasError: true,\n          error: error,\n        });\n      });\n  };\n\n  componentDidMount() {\n      this.fetchRegisteredUsersData();\n  };\n\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/c1rLyqj1/';\n\n  renderColorfulLegendText (value, entry) {\n    const { color } = entry;\n    //IDEA Change newUsers to New users here\n    return <span style={{ color }}>{value}</span>;\n  };\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          Error! {this.state.error}\n        </div>\n      );\n    };\n    \n    if (this.state.isLoading) {\n      return (\n        <div>\n          Please wait, loading registered players data...\n        </div>\n      );\n    };\n\n    return (\n      <div>\n        <div>Current number of users</div>\n        <AreaChart\n          width={500}\n          height={450}\n          data={this.state.registeredUsers}\n          margin={{\n            top: 10, right: 30, left: 0, bottom: 0,\n          }}\n        >\n          <Legend verticalAlign=\"top\" height={30} formatter={this.renderColorfulLegendText}/>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"month\" />\n          <YAxis />\n          <Tooltip />\n          <Area type=\"monotone\" dataKey=\"newUsers\" stackId=\"1\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n          <Area type=\"monotone\" dataKey=\"totalUsers\" stackId=\"1\" stroke=\"#82ca9d\" fill=\"#82ca9d\" />\n        </AreaChart>\n      </div>\n    );\n  };\n};\n"]},"metadata":{},"sourceType":"module"}