{"ast":null,"code":"var _jsxFileName = \"/home/karol/Desktop/Projekt/app/src/menu/home/GamesChart.js\";\nimport React, { PureComponent } from 'react';\nimport { PieChart, Pie, Cell, Legend } from 'recharts';\nconst data = [{\n  name: 'GamesRPG',\n  value: 10\n}, {\n  name: 'GamesDice',\n  value: 20\n}, {\n  name: 'GamesBoard',\n  value: 50\n}, {\n  name: 'GamesOther',\n  value: 5\n}];\nconst COLORS = ['#0088FE', '#00E49F', '#8884d8', '#82ca9d'];\nconst RADIAN = Math.PI / 180;\n\nconst renderCustomizedLabel = ({\n  cx,\n  cy,\n  midAngle,\n  innerRadius,\n  outerRadius,\n  percent,\n  index\n}) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n  return React.createElement(\"text\", {\n    x: x,\n    y: y,\n    fill: \"white\",\n    textAnchor: x > cx ? 'start' : 'end',\n    dominantBaseline: \"central\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"\".concat((percent * 100).toFixed(0), \"%\"));\n};\n\nexport default class GamesChart extends PureComponent {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Games played last month chart\", React.createElement(PieChart, {\n      width: 500,\n      height: 450,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Legend, {\n      verticalAlign: \"top\",\n      height: 30,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(Pie, {\n      data: data,\n      cx: 200,\n      cy: 200,\n      labelLine: false,\n      label: renderCustomizedLabel,\n      outerRadius: 190,\n      fill: \"#8884d8\",\n      dataKey: \"value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, data.map((entry, index) => React.createElement(Cell, {\n      key: \"cell-\".concat(index),\n      fill: COLORS[index % COLORS.length],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })))));\n  }\n\n}\nGamesChart.jsfiddleUrl = 'https://jsfiddle.net/alidingling/c9pL8k61/';","map":{"version":3,"sources":["/home/karol/Desktop/Projekt/app/src/menu/home/GamesChart.js"],"names":["React","PureComponent","PieChart","Pie","Cell","Legend","data","name","value","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","index","radius","x","cos","y","sin","toFixed","GamesChart","render","map","entry","length","jsfiddleUrl"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { PieChart, Pie, Cell, Legend } from 'recharts';\n\nconst data = [\n  { name: 'GamesRPG', value: 10 },\n  { name: 'GamesDice', value: 20 },\n  { name: 'GamesBoard', value: 50 },\n  { name: 'GamesOther', value: 5 },\n];\n\nconst COLORS = ['#0088FE', '#00E49F', '#8884d8', '#82ca9d'];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({\n  cx, cy, midAngle, innerRadius, outerRadius, percent, index,\n}) => {\n   const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\n\nexport default class GamesChart extends PureComponent {\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/c9pL8k61/';\n\n  render() {\n    return (\n      <div>\n        Games played last month chart\n        <PieChart width={500} height={450}>\n          <Legend verticalAlign=\"top\" height={30}/>\n          <Pie\n            data={data}\n            cx={200}\n            cy={200}\n            labelLine={false}\n            label={renderCustomizedLabel}\n            outerRadius={190}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n          >\n            {\n              data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n            }\n          </Pie>\n        </PieChart>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}