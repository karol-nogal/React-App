{"ast":null,"code":"var _jsxFileName = \"/home/karol/Desktop/Projekt/app/src/menu/games/index.js\";\nimport React from \"react\";\nimport { Button, Card, Image } from 'semantic-ui-react';\nexport class GameCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      games: [],\n      loading: false,\n      error: null,\n      expanded: false\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData() {\n    fetch(\"/plays.json\").then(resp => resp.json()).then(resp => this.setState({\n      games: resp\n    })).catch(error => this.setState({\n      error: \"err occ\"\n    }));\n  }\n\n  displayGameKind() {\n    return this.state.games.map(game => React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Image, {\n      floated: \"right\",\n      size: \"mini\",\n      src: \"/images/avatar/large/steve.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Steve Sanders\"), React.createElement(Card.Meta, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Friends of Elliot\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, game.title)), React.createElement(Card.Content, {\n      extra: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui two buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Button, {\n      basic: true,\n      color: \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Approve\"), React.createElement(Button, {\n      basic: true,\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Details\")))));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.displayGameKind());\n  }\n\n}","map":{"version":3,"sources":["/home/karol/Desktop/Projekt/app/src/menu/games/index.js"],"names":["React","Button","Card","Image","GameCard","Component","constructor","props","state","games","loading","error","expanded","componentDidMount","fetchData","fetch","then","resp","json","setState","catch","displayGameKind","map","game","title","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,mBAApC;AAEC,OAAO,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAsC;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,KAAK,EAAC,EADC;AAEPC,MAAAA,OAAO,EAAE,KAFF;AAGPC,MAAAA,KAAK,EAAE,IAHA;AAIPC,MAAAA,QAAQ,EAAE;AAJH,KAAX;AAMH;;AACDC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,SAAL;AACH;;AACDA,EAAAA,SAAS,GAAE;AACPC,IAAAA,KAAK,CAAC,aAAD,CAAL,CACKC,IADL,CACUC,IAAI,IAAEA,IAAI,CAACC,IAAL,EADhB,EAEKF,IAFL,CAEUC,IAAI,IACP,KAAKE,QAAL,CAAc;AACTV,MAAAA,KAAK,EAAEQ;AADE,KAAd,CAHP,EAMKG,KANL,CAMWT,KAAK,IAAE,KAAKQ,QAAL,CAAc;AACxBR,MAAAA,KAAK,EAAC;AADkB,KAAd,CANlB;AASH;;AAEDU,EAAAA,eAAe,GAAE;AACT,WAAO,KAAKb,KAAL,CAAWC,KAAX,CAAiBa,GAAjB,CAAqBC,IAAI,IACxC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,OAAO,EAAC,OADV;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,GAAG,EAAC,gCAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANF,EAOE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAPF,EAQE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,IAAI,CAACC,KADR,CARF,CADF,EAaE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,MAAb;AAAc,MAAA,KAAK,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAIE,oBAAC,MAAD;AAAQ,MAAA,KAAK,MAAb;AAAc,MAAA,KAAK,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CADF,CAbF,CADe,CAAP;AA0BP;;AACDC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEO,KAAKJ,eAAL,EAFP,CADJ;AAOH;;AA7DyC","sourcesContent":["import React from \"react\";\nimport { Button, Card, Image } from 'semantic-ui-react'\n\n export class GameCard extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            games:[],\n            loading: false,\n            error: null,\n            expanded: false\n        }\n    }\n    componentDidMount(){\n        this.fetchData()\n    }\n    fetchData(){\n        fetch(\"/plays.json\")\n            .then(resp=>resp.json())\n            .then(resp=>\n               this.setState({\n                    games: resp\n               })) \n            .catch(error=>this.setState({\n                error:\"err occ\"\n            }))  \n    }\n\n    displayGameKind(){\n            return(this.state.games.map(game=>\n    <Card>\n      <Card.Content>\n        <Image\n          floated='right'\n          size='mini'\n          src='/images/avatar/large/steve.jpg'\n        />\n        <Card.Header>Steve Sanders</Card.Header>\n        <Card.Meta>Friends of Elliot</Card.Meta>\n        <Card.Description>\n          {game.title}\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <div className='ui two buttons'>\n          <Button basic color='green'>\n            Approve\n          </Button>\n          <Button basic color='blue'>\n            Details\n          </Button>\n        </div>\n      </Card.Content>\n    </Card> \n     ))\n    }\n    render(){\n        return(\n            <div>\n               \n                  {this.displayGameKind()}\n                  \n            </div>\n        )\n    }\n}\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}