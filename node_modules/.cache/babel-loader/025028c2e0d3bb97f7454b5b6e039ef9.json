{"ast":null,"code":"var _jsxFileName = \"/home/karol/Desktop/Projekt/app/src/menu/games/index.js\";\nimport React from \"react\";\nimport { Card, Dimmer, Loader, Image, Segment, Container } from 'semantic-ui-react';\nimport GameCard from \"./game-card/GameCard.js\";\nimport GameFilter from \"./game-filter/GameFilter.js\";\nexport class GameCardColection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      this.setState({\n        value: event.target.value\n      });\n    };\n\n    this.state = {\n      games: [],\n      loading: true,\n      error: null,\n      value: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData() {\n    fetch(\"/plays.json\").then(resp => resp.json()).then(resp => this.setState({\n      games: resp,\n      loading: false\n    })).catch(error => this.setState({\n      error: \"err occ\"\n    }));\n  }\n\n  displayGameKind() {\n    return this.state.games.filter(game => game.title.toLocaleLowerCase().includes(this.state.value.toLocaleLowerCase())).map(game => React.createElement(GameCard, {\n      key: game.id,\n      title: game.title,\n      localization: game.localization.place,\n      date: game.date,\n      playerMax: game.palyer.max,\n      playerCur: game.palyer.current,\n      reqLvl: game.ReqLevelID,\n      descript: game.Description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    if (this.state.loading) {\n      return React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Dimmer, {\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        size: \"massive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Loading\")));\n    } else return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(GameFilter, {\n      onChange: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Card.Group, {\n      margin: \"12px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.displayGameKind())));\n  }\n\n}","map":{"version":3,"sources":["/home/karol/Desktop/Projekt/app/src/menu/games/index.js"],"names":["React","Card","Dimmer","Loader","Image","Segment","Container","GameCard","GameFilter","GameCardColection","Component","constructor","props","handleSubmit","event","setState","value","target","state","games","loading","error","componentDidMount","fetchData","fetch","then","resp","json","catch","displayGameKind","filter","game","title","toLocaleLowerCase","includes","map","id","localization","place","date","palyer","max","current","ReqLevelID","Description","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {  Card, Dimmer, Loader, Image, Segment, Container  } from 'semantic-ui-react'\nimport GameCard from \"./game-card/GameCard.js\";\nimport GameFilter from \"./game-filter/GameFilter.js\";\n\nexport class GameCardColection extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            games:[],\n            loading: true,\n            error: null,\n            value:\"\"\n        }\n       \n    }\n    handleSubmit=(event)=>{\n      this.setState({\n        value: event.target.value\n      })\n    }\n    componentDidMount(){\n        this.fetchData()\n    }\n    fetchData(){\n        fetch(\"/plays.json\")\n            .then(resp=>resp.json())\n            .then(resp=>\n               this.setState({\n                    games: resp,\n                    loading:false\n               })) \n            .catch(error=>this.setState({\n                error:\"err occ\"\n            }))  \n    }\n    displayGameKind(){\n            return(\n              this.state.games\n              .filter(\n                game=>game.title.toLocaleLowerCase().includes(this.state.value.toLocaleLowerCase()))\n              .map(\n                game=>\n                <GameCard\n                  key={game.id}\n                  title={game.title}\n                  localization={game.localization.place}\n                  date={game.date}\n                  playerMax={game.palyer.max}  \n                  playerCur={game.palyer.current}  \n                  reqLvl={game.ReqLevelID}\n                  descript={game.Description}\n                />\n              )\n            )}\n    render(){\n      if(this.state.loading){\n        return(\n          <Segment>\n          <Dimmer active>\n            <Loader size='massive'>Loading</Loader>\n          </Dimmer>\n        </Segment>\n        )\n      }else return(\n        \n            <div>\n                <Container>\n                <GameFilter onChange={this.handleSubmit}/>\n                </Container>\n                 \n                \n                <Segment>\n                  <Card.Group margin=\"12px\">\n                    {this.displayGameKind()}\n                  </Card.Group>\n                </Segment>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}