{"ast":null,"code":"var _jsxFileName = \"/home/karol/Desktop/Projekt/app/src/menu/games/index.js\";\nimport React from \"react\";\nimport { withStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { Grid, Container } from '@material-ui/core';\n\nclass GameCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleExpandClick = () => {\n      this.setState(prevState => ({\n        expanded: !prevState.expanded\n      }));\n    };\n\n    this.state = {\n      games: [],\n      loading: false,\n      error: null,\n      expanded: false\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData() {\n    fetch(\"/data/plays.json\").then(resp => resp.json()).then(resp => this.setState({\n      games: resp\n    })).catch(error => this.setState({\n      error: \"err occ\"\n    }));\n  }\n\n  displayGameKind() {\n    const classes = this.props.classes;\n    console.log(this.state.games);\n    return this.state.games.map(game => React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      avatar: React.createElement(Avatar, {\n        \"aria-label\": \"game\",\n        className: classes.avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, game.title),\n      action: React.createElement(IconButton, {\n        \"aria-label\": \"settings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(MoreVertIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })),\n      title: \"Shrimp and Chorizo Paella\",\n      subheader: \"September 14, 2016\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(CardMedia, {\n      className: classes.media,\n      image: \"/static/images/cards/paella.jpg\",\n      title: \"Paella dish\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, game.date)), React.createElement(CardActions, {\n      disableSpacing: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": \"add to favorites\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(FavoriteIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(IconButton, {\n      \"aria-label\": \"share\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(ShareIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(IconButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(ExpandMoreIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }))))));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.state.error ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Error Occured\") : null, React.createElement(Container, {\n      maxWidth: \"xl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Container, {\n      maxWidth: \"xl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), this.displayGameKind())));\n  }\n\n}\n\nexport default withStyles(theme => ({\n  card: {\n    maxWidth: 345\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%' // 16:9\n\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n}))(GameCard);","map":{"version":3,"sources":["/home/karol/Desktop/Projekt/app/src/menu/games/index.js"],"names":["React","withStyles","clsx","Card","CardHeader","CardMedia","CardContent","CardActions","Collapse","Avatar","IconButton","Typography","red","FavoriteIcon","ShareIcon","ExpandMoreIcon","MoreVertIcon","Grid","Container","GameCard","Component","constructor","props","handleExpandClick","setState","prevState","expanded","state","games","loading","error","componentDidMount","fetchData","fetch","then","resp","json","catch","displayGameKind","classes","console","log","map","game","card","avatar","title","media","date","render","theme","maxWidth","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","backgroundColor"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { withStyles} from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport {Grid, Container} from '@material-ui/core';\n\n\n class GameCard extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            games:[],\n            loading: false,\n            error: null,\n            expanded: false\n        }\n    }\n    componentDidMount(){\n        this.fetchData()\n    }\n    fetchData(){\n        fetch(\"/data/plays.json\")\n            .then(resp=>resp.json())\n            .then(resp=>\n               this.setState({\n                    games: resp\n               })) \n            .catch(error=>this.setState({\n                error:\"err occ\"\n            }))  \n    }\n\n    handleExpandClick = () => {\n        this.setState((prevState)=>({expanded:!prevState.expanded}));\n      };\n      \n\n    \n    displayGameKind(){\n        const classes = this.props.classes\n        console.log(this.state.games)\n            return(this.state.games.map(\n                game=>\n                <Grid item xs={3}>\n                <Card className={classes.card}>\n                <CardHeader\n                  avatar={\n                    <Avatar aria-label=\"game\" className={classes.avatar}>\n                      {game.title}\n                    </Avatar>\n                  }\n                  action={\n                    <IconButton aria-label=\"settings\">\n                      <MoreVertIcon />\n                    </IconButton>\n                  }\n                  title=\"Shrimp and Chorizo Paella\"\n                  subheader=\"September 14, 2016\"\n                />\n                <CardMedia\n                  className={classes.media}\n                  image=\"/static/images/cards/paella.jpg\"\n                  title=\"Paella dish\"\n                />\n                <CardContent>\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {game.date}\n                  </Typography>\n                </CardContent>\n                <CardActions disableSpacing>\n                  <IconButton aria-label=\"add to favorites\">\n                    <FavoriteIcon />\n                  </IconButton>\n                  <IconButton aria-label=\"share\">\n                    <ShareIcon />\n                  </IconButton>\n                  <IconButton>\n                    <ExpandMoreIcon/>\n                  </IconButton>\n                </CardActions>\n              </Card>\n              </Grid>\n            )\n        )\n    }\n    render(){\n        return(\n            <div>\n                {this.state.error?<p>Error Occured</p>:null}\n                <Container maxWidth=\"xl\">\n                <Grid  container\n                  direction=\"row\"\n                  justify=\"center\"\n                  alignItems=\"center\" \n                  spacing={2}>\n                    <Container maxWidth=\"xl\"></Container>\n                  {this.displayGameKind()}\n                  </Grid>\n                  </Container>\n            </div>\n        )\n    }\n}\n\nexport default  withStyles(theme => ({\n    card: {\n      maxWidth: 345,\n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n  }))(GameCard)\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}