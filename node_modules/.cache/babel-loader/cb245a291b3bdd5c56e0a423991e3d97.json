{"ast":null,"code":"var _jsxFileName = \"/home/karol/Desktop/Projekt/app/src/menu/PLayerList.js\";\nimport React from 'react';\nimport { Card, Icon, Image, Segment, Dimmer, Loader, Container } from 'semantic-ui-react';\nimport PlayersFilter from './player-list/PlayersFilter';\nexport class PlayerList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      this.setState({\n        value: event.target.value\n      });\n    };\n\n    this.state = {\n      playersList: [],\n      loading: true,\n      error: null,\n      value: ''\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData() {\n    fetch(\"/players.json\").then(resp => resp.json()).then(resp => this.setState({\n      playersList: resp,\n      loading: false\n    })).catch(error => this.setState({\n      error: \"err occ\"\n    }));\n  }\n\n  displayPlayersList() {\n    return this.state.playersList.filter(player => player.nick.toLocaleLowerCase().includes(this.state.value.toLocaleLowerCase())).map(player => React.createElement(Card, {\n      key: player.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Image, {\n      src: player.avatar,\n      wrapped: true,\n      ui: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, player.nick), React.createElement(Card.Meta, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, player.levelID), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, player.nick[0].toUpperCase() + player.nick.slice(1), \"is a \", player.class[0].toLowerCase() + player.class.slice(1) + \" \", \"living in \", player.city, \".\")), React.createElement(Card.Content, {\n      extra: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), player.friends), React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"heart\",\n      color: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))))));\n  }\n\n  render() {\n    if (this.state.loading) {\n      return React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Dimmer, {\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        size: \"massive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Loading\")), React.createElement(Image, {\n        src: \"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(Image, {\n        src: \"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(Image, {\n        src: \"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }));\n    } else return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(PlayersFilter, {\n      onChange: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(Segment, {\n      inverted: true,\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Card.Group, {\n      className: \"ui centered rgrid\",\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.displayPlayersList()))));\n  }\n\n}","map":{"version":3,"sources":["/home/karol/Desktop/Projekt/app/src/menu/PLayerList.js"],"names":["React","Card","Icon","Image","Segment","Dimmer","Loader","Container","PlayersFilter","PlayerList","Component","constructor","props","handleSubmit","event","setState","value","target","state","playersList","loading","error","componentDidMount","fetchData","fetch","then","resp","json","catch","displayPlayersList","filter","player","nick","toLocaleLowerCase","includes","map","id","avatar","levelID","toUpperCase","slice","class","toLowerCase","city","friends","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Icon, Image, Segment, Dimmer, Loader, Container } from 'semantic-ui-react';\nimport PlayersFilter from './player-list/PlayersFilter';\n\n\nexport class PlayerList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            playersList: [],\n            loading: true,\n            error: null,\n            value: '',\n        }\n    }\n    handleSubmit = (event) => {\n        this.setState({\n            value: event.target.value\n        })\n    }\n    componentDidMount() {\n        this.fetchData()\n    }\n    fetchData() {\n        fetch(\"/players.json\")\n            .then(resp => resp.json())\n            .then(resp =>\n                this.setState({\n                    playersList: resp,\n                    loading: false\n                }))\n            .catch(error => this.setState({\n                error: \"err occ\"\n            }))\n    }\n\n    displayPlayersList() {\n        return (\n            this.state.playersList\n                .filter(player =>\n                    player.nick.toLocaleLowerCase().includes(this.state.value.toLocaleLowerCase()))\n                .map(player =>\n                    <Card key={player.id}>\n                        <Image src={player.avatar} wrapped ui={false} />\n                        <Card.Content>\n                            <Card.Header>{player.nick}</Card.Header>\n                            <Card.Meta>\n                                {player.levelID}\n                            </Card.Meta>\n                            <Card.Description>\n                                {player.nick[0].toUpperCase() + player.nick.slice(1)}\n                                is a {player.class[0].toLowerCase() + player.class.slice(1) + \" \"}\n                                living in {player.city}.\n                  </Card.Description>\n                        </Card.Content>\n                        <Card.Content extra>\n                            <div className='ui grid'>\n                                <a>\n                                    <Icon name='user' />\n                                    {player.friends}\n                                </a>\n                                <a>\n                                    <Icon name='heart' color=\"red\" />\n                                </a>\n                            </div>\n                        </Card.Content>\n                    </Card>\n                ))\n    }\n    render() {\n        if (this.state.loading) {\n            return (\n                <Segment>\n                    <Dimmer active>\n                        <Loader size='massive'>Loading</Loader>\n                    </Dimmer>\n\n                    <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png' />\n                    <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png' />\n                    <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png' />\n                </Segment>\n            )\n        } else return (\n            <div>\n                <Container>\n                    <PlayersFilter onChange={this.handleSubmit} />\n                </Container>\n\n                <Segment inverted color=\"black\">\n                    <Container fluid>\n                        <Card.Group className=\"ui centered rgrid\" textAlign=\"center\">\n                            {this.displayPlayersList()}\n                        </Card.Group>\n                    </Container>\n                </Segment>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}